
TODO
====

+  fix all the makefiles / project files for the new
   directory layout.

   Especially: always build code in 'src' as libglbsp.a
   and make the cmdline and gui binaries link to that.

   >> make xming makefiles (cmdline and GUI)

   >> move outdated makefiles/projects into 'old' dir


glBSP and Map Tricks/Errors
===========================

1. Self-referencing Lines

This trick involves linedefs with the same sector reference
on both sidedefs.  In the original DOOM renderer, segs from
these lines are virtually ignored (though any mid-masked
texture is still drawn).  Hence by using a sector which is
different from the surrounding sector, people could create
the following special physics effects:

  1. invisible walkways (self-ref sector floor is higher)
  2. deep water (self-ref sector floor is lower)
  3. force fields (self-ref sector ceiling blocks movement)
 
glBSP detects these lines and does two things: prevents
spurious warnings about mismatched sectors, and adjusts
the final subsector so that the FIRST seg is not one on
a self-reference line.  It does the latter because most
engines use the very first seg to decide what sector to
associate the subsector with.

Engines should be aware of the trick and perform their
own analysis to emulate it.


2. Overlapping Lines

This trick is mostly used to make higher mid-masking textures.

glBSP will detect perfectly overlapping linedefs (i.e. using
the same start and end vertices, possibly swapped).  glBSP
will IGNORE them (producing no segs from the second and
subsequent lines).

Engines should also detect overlapping lines and emulate
the trick.


3. One-sided Windows

This trick uses a one-sided linedef where a two-sided linedef
should be, so the back of the one-sided line faces into a
normal sector.  In the original DOOM renderer, there was no
back-facing seg in the BSP, hence you could see through the
line when viewed from the back.  When viewed from the front,
the one-sided linedef acted normally (blocked your view).

glBSP can detect many usages of this trick (although not 100%
as that would require much more expensive analysis).

When found, glBSP will add a MINISEG along the back of the
one-sided linedef.  This miniseg will be partnered with the
normal seg on the front side (via the 'partner' fields in the
gl_seg structure).  This is the only time that minisegs are
used on existing linedefs or partnered with normal segs.

Engines should detect this (i.e. miniseg on a one-sided line)
and emulate the trick accordingly.


4. Map Errors

FIXME


