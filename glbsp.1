.\" -*-nroff-*-
.TH glbsp 1 "July 2004"
.\" .UC 4
.SH NAME
glbsp \- GL Nodes builder for DOOM ports
.SH SYNOPSIS
.B glbsp
.RI "[" options "] "
input.wad ... [-o output.wad]
.PP
.SH DESCRIPTION
.I glBSP
is a nodes builder specially designed to be used with OpenGL-based
DOOM game engines.  It adheres to the "GL-Friendly Nodes" specification,
which means it adds some new special nodes to a WAD file that makes it
very easy for an OpenGL DOOM engine to compute the polygons needed for
drawing the levels.
.SH OPTIONS
Options can begin with one or two dashes.  Running glBSP without any
options will show an informational screen.
.TP
.BI \-help
Show a option summary screen.
.TP
.BI "\-q -quiet"
Quieter output.  Information about each level (like
the number of linedefs, blockmap size, etc) is not
displayed when this option is given, and a few other
messages are skipped.  Important messages, like
failure to build a certain level, are still shown.
.TP
.BI \-factor " <num>" 
Changes the cost assigned to seg splits.  Factor can
be any number greater than 0, larger values make seg
splits more costly (and thus glBSP tries harder to
avoid them), but smaller values produce better BSP trees.
The default value is known to be a good compromise.
.TP
.BI \-fast
Starting with version 2.00, glBSP can cheat a bit and
re-use the original node information to create the GL
nodes, doing it *much* faster.  Use this option to
enable this feature.  The message "Using original nodes
to speed things up" will be displayed.

The downside to reusing the original nodes is that they
may not be as good as the ones glBSP normally creates,
e.g. the special checks to minimise slime-trails don't
kick in, and the -factor value doesn't have much effect.
.TP
.BI \-warn
Shows extra warning messages, which detail various
non-serious problems that glBSP has while analysing the
level structure.  Often these warnings show a real
problem in the level (e.g. a non-closed sector or
invalid sidedef), so they are worth checking now and
then.
.TP
.BI \-noreject
Normally glBSP will create an simple REJECT map for
each level.  This options prevents any existing
REJECT map, such as one time-consumingly built by a
dedicated reject builder, from being clobbered.
.TP
.BI \-noprog
Turn off the progress indicator.
.TP
.BI \-normal
glBSP usually detects if the normal node info (i.e.
the non-GL variety) is present, and leave it untouched
when it is, otherwise create it.  This option forces
glBSP to recreate the normal node info.
.TP
.BI \-packsides
Pack sidedefs, by detecting which sidedefs are
identical and removing the duplicates, producing a
smaller PWAD.

NOTE: this may make your level a lot harder to edit !
Therefore this option is most useful when producing the
final WAD for public release.
.PP
These next set of options normally don't need to be used, but they are
provided to allow complete control or for special circumstances:
.TP
.B \-v1 .. \-v3
Specify the version of the "GL Nodes" spec to use.
Using -v1 provides backwards compatibility.
The default is -v2.
Giving -v3 will force certain lumps
to use the new V3.0 formats, but is only useful for
testing since glBSP will automatically switch to these
formats when certain limits are exceeded.
.TP
.BI \-loadall
glBSP will normally try to copy lumps from the input
WAD file to the output file instead of loading them
into memory.  This allows you to run glBSP on very
large WADS (e.g. 15 MB for DOOM II) on a low memory
machine.

This option causes everything from the input file to be
loaded into memory.  This allows you to run glBSP using
the same file for both input and output, but I strongly
recommend _against_ it: you could lose your original
WAD if something goes wrong (and you know Murphy...).
.TP
.BI \-nonormal
Forces glBSP to not create the normal node information
when it detects that it is absent.
.TP
.BI \-forcegwa
Normally glBSP will automatically use GWA mode if the
output filename is missing (i.e. no -o option) or if
the output filename has the ".gwa" extension.  This
option forces glBSP into GWA mode.
.TP
.BI \-keepsect
Prevents unused sectors that are found in the level
from being removed.  This is important for anything
that refers to sector numbers directly (e.g. certain
obsolete RTS commands in EDGE), since pruning unused
sectors can make their numbers (as seen in an editor)
different.
.TP
.BI \-noprune
Disables all pruning of unused vertices, sidedefs,
linedefs and sectors from levels.  Pruning only occurs
when normal nodes are being built (i.e. it is
automatically disabled when in GWA mode).
.TP
.BI \-maxblock " <num>"
Sets the limit of the number of blocks the BLOCKMAP may
contain before we truncate it.  Default is 44000.  When
the level is too large to fit, glBSP will truncate the
blockmap, so it covers less area on the level.  This
means that in the parts it doesn't cover (at the outer
edges) there is no collision detection: you can walk
through walls and other objects and bullets/missiles
don't hit anything.  On very large but sparse levels,
using a larger value (e.g. 60000) may help.

A more serious problem is when the blockmap overflows
(glBSP will show a message about this).  The blockmap
created is invalid, and could crash the DOOM engine
when used.  Setting a lower limit (e.g. 20000 or less)
may help prevent crashes -- at the expense of the
no-collision problem popping up.  Some DOOM engines
(e.g. BOOM and MBF) have a "-blockmap" option that
generates their own blockmap internally, fixing these
problems.
.SH AUTHORS
Andrew Apted created glBSP and glBSPX and continues to maintain
them.
.PP
Andrew Baker, Janis Legzdinsh and André Majoral have
contributed code, and Marc Pullen helped with the documentation.
.PP
glBSP was originally
based on BSP 2.3 (C) Colin Reed and Lee Killough, which was created
from the basic theory stated in DEU5 (OBJECTS.C) by Raphael Quinet.
.SH LICENSE
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.
.PP
This program is is distributed in the hope that it
will be useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.
.SH "SEE ALSO"
.PP
The glBSP Homepage:
.UR http://glbsp.sourceforge.net/
http://glbsp.sourceforge.net/
.UE
